name: CI
on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches:
      - '**'
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:
jobs:

  docker-simpleAdditive-build:
    name: Docker simpleAdditive Image Build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: |
          cd containers/simpleAdditive
          rsync -rI "$(readlink -f knockem)" .
          rsync -rI "$(readlink -f pyproject.toml)" .
      - name: Build and Push to GitHub Container Registry
        uses: docker/build-push-action@v1
        with:
          push: true
          tags: "simpleAdditive"
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          repository: mmore500/cryptic-sequence-concept
          registry: ghcr.io
          path: ./containers/simpleAdditive/
          add_git_labels: true

  docker-simpleAdditiveSLURM-build:
    name: Docker simpleAdditiveSLURM Image Build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: |
          cd containers/simpleAdditiveSLURM
          rsync -rI "$(readlink -f knockem)" .
          rsync -rI "$(readlink -f pyproject.toml)" .
      - name: Build and Push to GitHub Container Registry
        uses: docker/build-push-action@v1
        with:
          push: true
          tags: "simpleAdditiveSLURM"
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          repository: mmore500/cryptic-sequence-concept
          registry: ghcr.io
          path: ./containers/simpleAdditiveSLURM/
          add_git_labels: true

  tidy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y bibtool rename
          npm install -g bibtex-tidy
          python3 -m pip install pip --upgrade
          python3 -m pip install -r requirements.txt
          python3 -m pip install -r docs/requirements.txt
      - run: ./tidy/test_tidy.sh

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          python3 -m pip install pip --upgrade
          python3 -m pip install -r requirements.txt
      - run: ./ci/lint.sh

  test-pylib:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          python3 -m pip install pip --upgrade
          python3 -m pip install -r requirements.txt
      - run: python3 -m pytest -n auto pylib/test

  binder:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y ghostscript
          python3 -m pip install pip --upgrade
          python3 -m pip install -r requirements.txt
      # Adapted from https://askubuntu.com/a/524368
      - run: ./binder/execute_notebooks.sh
      # adapted from https://unix.stackexchange.com/a/545630
      - run: find -type f -name "*.pdf" -exec bash -c 'gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/screen -dNOPAUSE -dBATCH -dQUIET -sOutputFile="new.pdf" "{}"; rm "{}"; mv "new.pdf" "{}";' {} \;
      - run: git init
      - uses: fregante/setup-git-user@v1
      - run: git commit --allow-empty -m "Initial commit"
      - run: cp -r binder/ deploy/
      - run: rm -f deploy/requirements.txt deploy/pylib
      - run: cp -v requirements.txt deploy/
      - run: cp -rv pylib deploy/
      - uses: JamesIves/github-pages-deploy-action@4.0.0
        with:
          branch: binder # The branch the action should deploy to.
          folder: deploy # The folder the action should deploy.

  latex:
    name: Latex Build
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/mmore500/teximage:sha-77b8179
      # github actions requires root to access mounted volumes
      options: --user root
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - run: |
          trap 'cat tex/*.log || true >> "$GITHUB_OUTPUT"' EXIT
          make -C tex/
      - name: Upload output as artifact
        uses: actions/upload-artifact@v4
        with:
          name: manuscript
          path: tex/${{ github.event.repository.name }}-draft.pdf
